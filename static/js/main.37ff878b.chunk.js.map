{"version":3,"sources":["components/Header.js","components/FormInput.js","components/EmployeeCard.js","components/UsersView.js","utils/API.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","FormInput","props","console","log","firstName","lastName","value","name","onChange","handleInputChange","type","placeholder","onClick","handleFormSubmit","EmployeeCard","employees","length","map","employee","index","alt","first","src","picture","medium","style","listStyleType","last","email","cell","UsersView","axios","get","App","state","allUsers","filteredUsers","searchTerm","password","event","target","setState","API","then","data","results","this","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oRAceA,MAZf,WAEE,OACA,qBAAKC,UAAU,mCAAf,SACE,sBAAKA,UAAU,iBAAf,UACE,oBAAIA,UAAU,oBAAd,gCACA,mBAAGA,UAAU,eAAb,mECwBSC,MA9Bf,SAAoBC,GAIhB,OAFFC,QAAQC,IAAIF,GAGR,gCACE,uCACSA,EAAMG,UADf,IAC2BH,EAAMI,YAEjC,uBAAMN,UAAU,OAAhB,UACE,uBACEO,MAAOL,EAAMG,UACbG,KAAK,YACLC,SAAUP,EAAMQ,kBAChBC,KAAK,OACLC,YAAY,eAEd,uBACEL,MAAOL,EAAMI,SACbE,KAAK,WACLC,SAAUP,EAAMQ,kBAChBC,KAAK,OACLC,YAAY,cAEd,wBAAQC,QAASX,EAAMY,iBAAvB,2BCMKC,MA9Bf,SAAsBb,GACpB,OACE,mCACCA,EAAMc,UAAUC,OAAS,EAAIf,EAAMc,UAAUE,KAAI,SAACC,EAAUC,GAC3D,OACE,sBAAKpB,UAAU,OAAf,UACE,qBAAKA,UAAU,gBAAf,SACE,qBAAKqB,IAAKF,EAASX,KAAKc,MAAOC,IAAKJ,EAASK,QAAQC,WAEvD,qBAAKzB,UAAU,UAAf,SACE,qBAAI0B,MAAO,CAACC,cAAe,QAA3B,UACE,+BACE,2CADF,IAC0BR,EAASX,KAAKc,MADxC,IACgDH,EAASX,KAAKoB,QAE9D,+BACE,4CADF,IAC2BT,EAASU,SAEpC,+BACE,iDADF,IACgCV,EAASW,aAI7C,sBAAM9B,UAAU,SAAhB,4BAjByBoB,MAoBzB,qBCfKW,MATf,SAAmB7B,GAEjB,OAAQ,gCACLC,QAAQC,IAAIF,EAAMc,WACnB,4CACA,cAAC,EAAD,CAAcA,UAAWd,EAAMc,gB,iBCNpB,EAEH,WACR,OAAOgB,IAAMC,IAAI,2CCuENC,E,4MAjDbC,MAAQ,CACNC,SAAU,GACVC,cAAe,GACfC,WAAY,GACZjC,UAAW,GACXC,SAAU,GACViC,SAAU,I,EAqBZ7B,kBAAoB,SAAA8B,GAElB,IAAIjC,EAAQiC,EAAMC,OAAOlC,MACnBC,EAAOgC,EAAMC,OAAOjC,KAG1B,EAAKkC,SAAL,eACGlC,EAAOD,IAEVJ,QAAQC,IAAIG,I,kEAfO,IAAD,OAClBoC,IAAeC,MAAK,SAAA5B,GAClB,EAAK0B,SAAS,CAAEN,SAAUpB,EAAU6B,KAAKC,e,+BAiB3C,OACE,sBAAK9C,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAWU,kBAAmBqC,KAAKrC,kBAAmBL,UAAW0C,KAAKZ,MAAM9B,UAAWC,SAAUyC,KAAKZ,MAAM7B,WAC5G,cAAC,EAAD,CAAWU,UAAW+B,KAAKZ,MAAMC,kB,GA7CvBY,IAAMC,WCdTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBR,MAAK,YAAkD,IAA/CS,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.37ff878b.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Header () {\n\n  return (\n  <div className=\"jumbotron jumbotron-fluid tester\">\n    <div className=\"container dark\">\n      <h1 className=\"display-4 lighter\">Employee Directory</h1>\n      <p className=\"lead lighter\">Search employees and filter them by their names</p>\n    </div>\n</div>\n  )\n}\n\nexport default Header;","import React from \"react\";\n\nfunction FormInput (props) {\n\n  console.log(props)\n\n    return (\n      <div>\n        <p>\n          Hello {props.firstName} {props.lastName}\n        </p>\n        <form className=\"form\">\n          <input\n            value={props.firstName}\n            name=\"firstName\"\n            onChange={props.handleInputChange}\n            type=\"text\"\n            placeholder=\"First Name\"\n          />\n          <input\n            value={props.lastName}\n            name=\"lastName\"\n            onChange={props.handleInputChange}\n            type=\"text\"\n            placeholder=\"Last Name\"\n          />\n          <button onClick={props.handleFormSubmit}>Submit</button>\n        </form>\n      </div>\n    );\n}\n\nexport default FormInput;\n","import React from \"react\";\n\nfunction EmployeeCard(props) {\n  return (\n    <>\n    {props.employees.length > 0 ? props.employees.map((employee, index) => {\n      return(\n        <div className=\"card\" key={index}>\n          <div className=\"img-container\">\n            <img alt={employee.name.first} src={employee.picture.medium}/>\n          </div>\n          <div className=\"content\">\n            <ul style={{listStyleType: \"none\"}}>\n              <li>\n                <strong>Name:</strong> {employee.name.first} {employee.name.last}\n              </li>\n              <li>\n                <strong>Email:</strong> {employee.email}\n              </li>\n              <li>\n                <strong>Cell phone:</strong> {employee.cell}\n              </li>\n            </ul>\n          </div>\n          <span className=\"remove\">ùòÖ</span>\n        </div>      \n      )\n    })  : \"no search found\"}\n    </>\n  );\n}\n\nexport default EmployeeCard;","import React from \"react\";\nimport EmployeeCard from \"./EmployeeCard\";\n\nfunction UsersView(props) {\n\n  return (<div>\n    {console.log(props.employees)}\n    <h1>Users View</h1>\n    <EmployeeCard employees={props.employees} />\n    </div>);\n}\n\nexport default UsersView;","import axios from \"axios\";\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default {\n  // Gets all users\n  getUsers: function() {\n    return axios.get(\"https://randomuser.me/api/?results=200\");\n  }\n};","import React from \"react\";\nimport \"./App.css\";\nimport Header from \"./components/Header\";\nimport FormInput from \"./components/FormInput\";\nimport UsersView from \"./components/UsersView\";\nimport API from \"./utils/API\";\n\n// function FormInput() {\n//   return <div>Form Input</div>;\n// }\n\n// function UsersView( props) {\n//    // props: users (filteredUsers)\n//    // button to filter by name \n//       // onClick -> this.sortUsers\n//   return <div>Users View</div>;\n// }\n// const [people, setPeople] = useState([]);\n// console.log(\"Here are our users\")\n\n// useEffect(() => {\n//   API.getUsers().then(employees => {\n//     setPeople(employees.data.results)\n//   })\n// }, []) \n\nclass App extends React.Component {\n  state = {\n    allUsers: [],\n    filteredUsers: [],\n    searchTerm: \"\",\n    firstName: \"\",\n    lastName: \"\",\n    password: \"\"\n  }\n    // component did mount\n    // call API (utils)\n    // setState\n    // allUsers: [],\n    // filteredUsers: [],\n    // handleInputChange\n    // change (setState) searchTerm\n    // filter users based on searchTerm\n    // sort if relevant\n    // sortUsers\n    // using js sort (by string, or if you want to sort by number (DOB))\n    // optionally implement, up or down\n\n  componentDidMount() {\n    API.getUsers().then(employees => {\n      this.setState({ allUsers: employees.data.results})\n    })\n  }\n\n  handleInputChange = event => {\n    // Getting the value and name of the input which triggered the change\n    let value = event.target.value;\n    const name = event.target.name;\n\n    // Updating the input's state\n    this.setState({\n      [name]: value\n    })\n    console.log(value)\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <FormInput handleInputChange={this.handleInputChange} firstName={this.state.firstName} lastName={this.state.lastName} />\n        <UsersView employees={this.state.allUsers} />\n      </div>\n    );\n  }\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}